                                             /*   **
                                        **************  *****
                                     **$$$$  ****   $$*******
                                   * $$$$$$$$$   $$* **   *$**
                                  *  $    $$$$$* $* *$$$$$$$$$**
                                 *  $$$$$$$$$$$$$ $$$$$$$$$**$$*
                                 $$  $$$$$$$ $$$$$$$$ $$$$$$$$$$$$
                               *$ *$$$$$$$$$$$*$*$*$    *****$***
                             **$$ $$$$$$*$ **    [[[[[[[   [[[
                             **$**$$**$$$@@     [  #####  ## #
                           *$$$*****$$$$$$         ..###   ###
                           **$$$$$$$$ [[$$ ##        +++   ###
                            $$$$$$**[[  [[$$    #          ##
                              $$$***#[  #     ###      #   ##
                              $$$$$$ ##++ #+        ## ######
                              $$$$$#  ###       ##       ##
                              $$$$$#   ##            ######
                                $$$### ##      ##    #####
                                  $#$ #  +##  #   ##  ## #
                                  $$$$     #   +++#######
                                  $$*      ##############
                                  *$$# #  ++     ++++        ######
                                  $$###         ++###      ##      ++
                                  $# +#      #######+     +##+   ## ##
                                  *#+ ##     ++###+###    +  ###+     ##
                                  ## ##+#  # ++ +++++##  +  #++##       ##
                                 ##+#  ##  ++##+     ###++ ##++           #
                                ##+ +   ++  +##+  +   +######## #          #
                              ###+     ++++##          ++ # # ##+         ##
                          ####  +        ++            +++++# ## ##+        #
                     ###++   +                           ##############+ +##+##
                   ##+       ##                         ++#+ ++#########++##  "
                 ####+                                    +#+ +++###############
               ###                                       ++++++#+++++##########
              ##+                                            ++ +     ####+++++
             ##                              ++               +++        ##  ++
             ##+                  ++                         +++++ +  # # ##+++
             #      ++  +           ++                       ++@++ ++##### # ++
             #    +   ####+                                +++++++###++####+##
             #    +   ####+                                +++++++###++####+##
             #   +    ###++                               +++++######## #######
             #  +++    ####++++@                          +++++++++###   ###  #
             #+ #+      ###++++++++                            ++++++#   ##+++#
             ##+ +      #### #####++++                          ++++##    ###++
             ##++      ###########++                          ++++++#      ## +
             ###+      ##########+++                             #++#        ##
             #+  +    +########++                         ++##########     
            ###+        # ###+++++                         +++++#####      
           ###+  +      #  ##+++                          +++++#######     
           ##++##+     ##   ##++  ##                       ###########     
            ##+##+     ###  ######              #####     ###++++#####
            ##  ##     ##      ##  ######  ++              #+  ######
            ##+#       ##      ##  ######+++++             ++ #######
           ### #+    ###       ##  ########                  ## ####
           ######+    ##       ##++    ##+                  ## ## ##
          +###  ####+##       ##                            +     #+
          ##++ +  ######      ##                                  ##
          +##       ++ #     +#                 @@@                #
          +#         + #    ##                                    ##
          ## +       # #    #                                      #+
          ##+        # #    # +                                    #+
          ##+        # #    ## ###                                ###
          ##+  +     ###    ##    ####                            +##
          #++     #  ##+   +#  ########                          ####
         ##++        ##    ## ++   ####                         #####
          ##++       ++    #         +##         ##            ######
         +# +        +#   +#           +#+      #####         ######+
          # +       +#    #           +#+   ############           +##
          # +      ##    +#           +###+  ######### +###++      +#
           ##++  + #     #     #             ###   #  #######++     #
           ##++  + #     ##             +### #+#  #+####        #
           ##+    +##    ##     ##         +###++#   #++####        #
           # + +  +#     #                 +#+++# #+++###+         #
            #      #     # +++++           +#+++# #+++###++        ##
           +#      #     #    #####+        +#+++# #+++####++        #
           # ##    ###   ###++           ++##+++# #+++####          #
           ########  ##  ###              ###++## ##++##             #
             ### ##     ## ##                ###########               #
            ##+ ###      #####              #########                 #
             ##### ###     ##+               ## ## ###                 +
             ########## #  ##++             +++###++++                 +
             ########## #  #++              ++##### ++++                ++
             ++## ++  ++  ## #+               ++### #++++               +
               ########### ## #+            ++++##+++++++                +
                 ##+++  #  #### ++           ++### #+++++++              ++
                   #+####    ##++          +++##+ #####++ +             ++
                    ##### + + ### ++++      ++###  #####++ +            ++
                      ########### #++++    ++###  #####++ +             +
                       +###+ ##### ++ ++ +   +#      +# #++  +            +
                             ##############  ##       +### ++            ++
                              ####+++++###+  ##         ## ++           +++
                              #####+++#####  ##          ##+#            ++
                              ########+###++  #           ###             +
                               ###### # ## #  #           ##++            +
                                ## ## ## ## ## #           # # ##         +
                                ####  #  ++ # ##           +#  #+         +
                                ## ++       # ##            #####         ++
                                ######  #   +###             ####+         +
                                # ####      ####             #####+         +
                                 +#+ ## +#### ##               ####+++  +     #
                                   ##  #  #######               ###### ###   ##
                                  #    ##  #  ###                 ######+++   ##
                                 #########  #####                 ######+++   #
                                 ## # # ## # # #                   ## # #  
                                  ##  # +  #  ##                    +## + + +
                                 # ###   #     #                     # ### #
                                 #  ###+++     #+                    ## ++  #
                                 ## #####      ##                    ## ## ####
                                 # ######       #                    ## # +  +
                                 # + + +#       #                     # + + + +
                                  # +  ##       #                     # + + + +
                                   #+ ++##     ##                      # # #+ +
                                    #+ + +     +#                      ### # +
                                    # + + +      #                      +# + +
                                    # + +  +     #                       ### ##
                                     # ###++     ##                        ## #
                                       #  #      ##                        ####
                                        # #      #+                         ###
                                         ## #   ###                          ##
                                          ## #   ##                          ##
                                           ### ## #
                                           +##  +##
                                            ##    #
                                            +#    #
                                            +#++   "
                                             ## +   #
                                             ##+     ##
                                             # #     +#
                                            #+      ###
                                             +# +    ++#
                                             ##   +   +#
                                            ## +     +##
                                           ###       #+#
                                          #+         + #
                                        ##           +##
                                        #+ # # # +#    #
                                         ##+ #  # #   */
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
typedef long long ll;
const int maxn = 100005;
struct edge{
	int u,v,next;
	ll c,j;
}e[200005];
int p[200005],eid;
void addege(int u,int v,ll c,ll j){
	e[eid].v = v;
	e[eid].c = c;
	e[eid].j = j;
	e[eid].next = p[u];
	p[u] = eid++;
}
ll Maxj[maxn],Maxc[maxn];
int ind[maxn];
queue<int> q;
int main()
{
	int T;
	scanf("%d",&T);
	int N,M;
	int u,v;
	ll cost,c,j;
	while(T--){
		scanf("%d%d",&N,&M);
		memset(p,-1,sizeof(p));
		eid = 0;
		memset(ind,0,sizeof(ind));
		while(M--){
			scanf("%d%d%lld%lld%lld",&u,&v,&cost,&c,&j);
			addege(u,v,c-cost,j-cost);
			ind[v]++;
		}
		for(int i = 0;i <= N;i++) Maxj[i] = Maxc[i] = -1e18;
		Maxj[1] = Maxc[1] = 0;
		while(!q.empty()) q.pop();
		q.push(1);
		while(!q.empty()){
			int u = q.front();
			q.pop(); 
			for(int i = p[u];i != -1;i=e[i].next){
				int v = e[i].v;
				Maxj[v] = max(Maxj[v],Maxj[u] + e[i].j);
				Maxc[v] = max(Maxc[v],Maxc[u] + e[i].c);
				ind[v]--;
				if(ind[v]==0) q.push(v);
			}
		}
		ll lj = Maxj[N] < 0 ? -Maxj[N] : 0;
		ll lc = Maxc[N] < 0 ? -Maxc[N] : 0;
		//cout<<lj<<' '<<lc<<endl;
		if(lj > lc) printf("cnznb!!!\n%lld\n",lj - lc);
		else if(lj == lc) puts("oof!!!");
		else printf("rip!!!\n%lld\n",lc-lj);
	}
	return 0;
}

